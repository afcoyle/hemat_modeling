ylab("Percent of Crabs with BCS") +
xlab("Sex") +
scale_x_discrete(labels = c("Male", "Female")) +
scale_y_continuous(limits = c(0,18))
sex_plot
#### CW -------------------------------------
# Calculate means and standard errors
cw_means <- tapply(crabdat$Bitter, crabdat$CW, FUN = mean)
SE_vals <- with(crabdat, tapply(Bitter, CW, FUN = sd) / sqrt(table(crabdat$CW)))
# Create new data table
cw_table <- data.frame(cw_means, SE_vals)
# Rename and reorder columns
cw_table <- cw_table %>%
dplyr::rename(bitter_mean = cw_means,
cw = Var1,
std_error = Freq) %>%
relocate(cw)
# Filter to only include rows with a CW between 70mm and 180mm, as those have 50+ observations
cw_table$cw <- as.numeric(levels(cw_table$cw))
cw_table <- cw_table %>%
filter(cw >= 70 & cw <= 180)
# Multiply values by 100 to get percentages
cw_table$bitter_mean = cw_table$bitter_mean * 100
cw_table$std_error = cw_table$std_error * 100
# Plot cw
cw_plot <- ggplot(cw_table) +
geom_point(aes(x = cw, y = bitter_mean),
stat = "identity") +
geom_errorbar(aes(x = cw,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("Carapace Width (mm)") +
scale_y_continuous(limits = c(0,18)) +
theme(axis.title.y = element_blank())
cw_plot
ggdraw() +
draw_plot(SC_plot, x = 0, y = .5, width = .5, height = .5) +
draw_plot(BM_plot, x = 0.5, y = .5, width = .5, height = .5) +
draw_plot(sex_plot, x = 0, y = 0, width = .5, height = .5) +
draw_plot(cw_plot, x = .5, y = 0, width = .5, height = .5)
ggsave(filename = "../paper/images/Fig3_general_model_data.png")
# Set model filepath
model_filepath <- "../output/ADFG_SE_AK_pot_surveys/models/weighted_models/fem_crabs/"
# Read in average model
avg_model <- readRDS(file = paste0(model_filepath, "avg_model.rds"))
# Get basic plot
plot(avg_model)
# Create table of coefficients
coef_tab <- summary(avg_model)$coefmat.full
coef_tab <- as.data.frame(coef_tab)
# Turn rownames into column
coef_tab <- rownames_to_column(coef_tab, var = "variable")
# Remove column header whitespace
colnames(coef_tab) <- str_remove_all(colnames(coef_tab), " ")
# Edit variable column to remove unneeded elements
coef_tab$variable <- coef_tab$variable %>%
str_replace("^cond\\(", "")
coef_tab$variable <- coef_tab$variable %>%
str_replace("s.", "")
coef_tab <- dplyr::rename(coef_tab, significant = `Pr(>|z|)`)
# Remove int row
coef_tab <- coef_tab[coef_tab$variable != "(Int))", ]
# Arrange by magnitude of estimated coefficient
coef_tab <- coef_tab %>%
arrange(desc(abs(Estimate)))
# Change pval to y/n
coef_tab$significant[coef_tab$significant >= 0.05] <- "n"
coef_tab$significant[coef_tab$significant != "n"] <- "y"
# Create graph. Start with basic image and sorting
fem_mod <- coef_tab %>%
ggplot(aes(x = Estimate, y = reorder(variable, abs(Estimate), decreasing = FALSE),
colour = significant)) +
geom_point() +
geom_errorbar(aes(xmin = Estimate - AdjustedSE,
xmax = Estimate + AdjustedSE),
width = 0.3) +
geom_vline(xintercept=0, linetype = "dotted") +
#mess with labels and axes
scale_y_discrete(labels = c("Latitude", "Leg Condition", "Depth",
"Egg Dev. (Uneyed)", "Temperature", "Carapace Width",
"Clutch Fullness", "Black Mat", "Egg Dev. (Barren)",
"Egg Dev. (Dead Eggs)", "Egg Dev. (Juvenile)", "Shell Cond. (Cubic)",
"Shell Cond. (Quadratic)", "Shell Cond. (Linear)")) +
scale_x_continuous(limits = c(-5, 1.7)) +
ylab("Predictor Variable") +
xlab ("Estimated Coefficient") +
# mess with theme and appearance
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "grey",
linewidth = 0.2,
linetype = 2)) +
scale_color_manual(values = c("darkgrey", "black")) +
theme(legend.position = "none")
# Save plot
ggsave(filename = "../paper/images/Fig4a_female_model_coefficients.png")
# Set model filepath
model_filepath <- "../output/ADFG_SE_AK_pot_surveys/models/weighted_models/male_crabs/"
# Read in average model
avg_model <- readRDS(file = paste0(model_filepath, "avg_model.rds"))
# Get basic plot
plot(avg_model)
# Create table of coefficients
coef_tab <- summary(avg_model)$coefmat.full
coef_tab <- as.data.frame(coef_tab)
# Turn rownames into column
coef_tab <- rownames_to_column(coef_tab, var = "variable")
# Remove column header whitespace
colnames(coef_tab) <- str_remove_all(colnames(coef_tab), " ")
# Edit variable column to remove unneeded elements
coef_tab$variable <- coef_tab$variable %>%
str_replace("^cond\\(", "")
coef_tab$variable <- coef_tab$variable %>%
str_replace("s.", "")
coef_tab <- dplyr::rename(coef_tab, significant = `Pr(>|z|)`)
# Remove int row
coef_tab <- coef_tab[coef_tab$variable != "(Int))", ]
# Arrange by magnitude of estimated coefficient
coef_tab <- coef_tab %>%
arrange(desc(abs(Estimate)))
# Change pval to y/n
coef_tab$significant[coef_tab$significant >= 0.05] <- "n"
coef_tab$significant[coef_tab$significant != "n"] <- "y"
# Create graph. Start with basic image and sorting
male_mod <- coef_tab %>%
ggplot(aes(x = Estimate, y = reorder(variable, abs(Estimate), decreasing = FALSE),
colour = significant)) +
geom_point() +
geom_errorbar(aes(xmin = Estimate - AdjustedSE,
xmax = Estimate + AdjustedSE),
width = 0.3) +
geom_vline(xintercept=0, linetype = "dotted") +
#mess with labels and axes
scale_y_discrete(labels = c("Latitude", "Black Mat", "Temperature",
"Depth", "Leg Condition", "Carapace Width",
"Shell Cond. (Cubic)", "Maturity", "Shell Cond. (Quadratic)",
"Shell Cond. (Linear)")) +
scale_x_continuous(limits = c(-5, 1.7)) +
ylab("Predictor Variable") +
xlab ("Estimated Coefficient") +
# mess with theme and appearance
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "grey",
linewidth = 0.2,
linetype = 2)) +
scale_color_manual(values = c("darkgrey", "black")) +
theme(legend.position = "none")
# Save plot
ggsave(filename = "../paper/images/Fig4b_male_model_coefficients.png")
ggarrange(fem_mod + rremove("xlab"),
male_mod,
labels = c("F", "M"),
ncol = 1, nrow = 2,
align = "h")
# Save plot
ggsave(filename = "../paper/images/Fig_4_sex_specific_models.png")
# Read in data
femdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/female_data_for_model.csv")
mascdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/male_data_for_model.csv")
#### Egg Development -----------------------------------------------------------------
# Calculate means and standard errors
dev_means <- tapply(femdat$Bitter, femdat$Egg.Development, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Development, FUN = sd) / sqrt(table(femdat$Egg.Development)))
# Create new data table
dev_table <- data.frame(dev_means, SE_vals)
# Rename and reorder columns
dev_table <- dev_table %>%
dplyr::rename(bitter_mean = dev_means,
dev = Var1,
std_error = Freq) %>%
relocate(dev)
# Multiply values by 100 to get percentages
dev_table$bitter_mean = dev_table$bitter_mean * 100
dev_table$std_error = dev_table$std_error * 100
# Plot dev
dev_plot <- ggplot(dev_table) +
geom_bar(aes(x = dev, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = dev,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Development") +
scale_x_discrete(labels = c("Clean", "Matted", "Dead Eggs", "Juvenile", "Uneyed")) +
scale_y_continuous(limits = c(0,40))
dev_plot
#### Clutch Fullness -----------------------------------------------------------------
# Calculate means and standard errors
pct_means <- tapply(femdat$Bitter, femdat$Egg.Percent, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Percent, FUN = sd) / sqrt(table(femdat$Egg.Percent)))
# Create new data table
pct_table <- data.frame(pct_means, SE_vals)
# Rename and reorder columns
pct_table <- pct_table %>%
dplyr::rename(bitter_mean = pct_means,
pct = Var1,
std_error = Freq) %>%
relocate(pct)
# Remove values without representation
pct_table$pct <- as.numeric(levels(pct_table$pct))
pct_table <- pct_table %>%
filter(bitter_mean > 0.01) %>%
filter(pct != 5)
# Multiply values by 100 to get percentages
pct_table$bitter_mean = pct_table$bitter_mean * 100
pct_table$std_error = pct_table$std_error * 100
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 1.5) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Clutch Fullness (%)") +
scale_y_continuous(limits = c(0,40)) +
theme(axis.title.y = element_blank())
pct_plot
# Plot distribution of clutch fullness for infected and uninfected
# Reorder data to display infected and uninfected counts at each CF
CF_distrib <- femdat %>%
group_by(Egg.Percent) %>%
summarise(n_rows = length(Bitter),
n_bitter = sum(Bitter))
# Remove underrepresented cols
# pct_table$pct <- as.numeric(levels(pct_table$pct))
CF_distrib <- CF_distrib %>%
filter(n_rows > 30)
# Create cols for distrib of bitter and non-bitter
CF_distrib$non_bitter <- CF_distrib$n_rows - CF_distrib$n_bitter
CF_distrib$hist_bitter <- CF_distrib$n_bitter / sum(CF_distrib$n_bitter)
CF_distrib$hist_nb <- CF_distrib$non_bitter / sum(CF_distrib$non_bitter)
# Pivot longer, drop irrelevant columns
CF_distrib <- CF_distrib %>%
pivot_longer(cols = c(hist_bitter, hist_nb), names_to = "bitter_status", values_to = "hist_vals") %>%
select(c(Egg.Percent, bitter_status, hist_vals))
# Plot as histogram
CF_hist <- CF_distrib %>%
ggplot() +
geom_bar(aes(x = Egg.Percent, y = hist_vals, fill = bitter_status),
stat = "identity", position = position_dodge()) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("Clutch Fullness (%)") +
ylab("Frequency") +
scale_fill_manual("BCS Status", labels = c("Positive", "Negative"), values = c("grey", "black")) +
theme(legend.position = "inside", legend.position.inside = c(0.2, 0.6))
CF_hist
#### Maturity (Males) -----------------------------------------------------------------
# Calculate means and standard errors
mat_means <- tapply(mascdat$Bitter, mascdat$mat_stat, FUN = mean)
SE_vals <- with(mascdat, tapply(Bitter, mat_stat, FUN = sd) / sqrt(table(mascdat$mat_stat)))
# Create new data table
mat_table <- data.frame(mat_means, SE_vals)
# Rename and reorder columns
mat_table <- mat_table %>%
dplyr::rename(bitter_mean = mat_means,
mat = Var1,
std_error = Freq) %>%
relocate(mat)
# Multiply values by 100 to get percentages
mat_table$bitter_mean = mat_table$bitter_mean * 100
mat_table$std_error = mat_table$std_error * 100
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Male Maturity") +
scale_x_discrete(labels = c("Immature", "Mature"))
mat_plot
ggdraw() +
draw_plot(dev_plot, x = 0, y = 0.5, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = 0.5, width = .5, height = .5) +
draw_plot(mat_plot, x = 0.5, y = 0, width = .5, height = .5) +
draw_plot(CF_hist, x = 0, y = 0, width = .5, height = .5) +
draw_label(label = "A", x = .42, y = .95) +
draw_label(label = "B", x = .92, y = .95) +
draw_label(label = "C", x = .42, y = .45) +
draw_label(label = "D", x = .92, y = .45)
# Save plot
ggsave(filename = "../paper/images/Fig_5_sex_specific_models.png")
?scale_x_continuous
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2010, 2015, 2020, 2025))
crabdat <- read.csv(file = "../data/NOAA_tanner_vals.csv")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2010, 2015, 2020, 2025))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2010, 2015, 2020, 2025),
limits - c(2010, 2025))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2010, 2015, 2020, 2025),
limits - c(2010, 2025))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2010, 2015, 2020, 2025),
limits = c(2010, 2025))
limits = c(2012, 2024))
crabdat %>%
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024))
crabdat <- read.csv(file = "../data/NOAA_tanner_vals.csv")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024))
crabdat <- read.csv(file = "../data/NOAA_tanner_vals.csv")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_x_conitnuous(breaks = c(10000000, 20000000, 30000000))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10 million", "20 million", "30 million"))
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
xlab("Dollars (millions)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
xlab("Dollars (millions)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)")
crabdat <- read.csv(file = "../data/NOAA_tanner_vals.csv")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(breaks = c(2013, 2018, 2023),
limits = c(2012, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("Annual Fishery Value")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("Annual Fishery Value (1995-Present)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("Annual Alaskan Tanner Fishery Value (1995-Present)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("Alaska Tanner crab Fishery Value (1995-Present)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("Alaska Tanner Crab Fishery Value (1995-Present)")
crabdat %>%
ggplot(aes(x = Year, y = Dollars)) +
geom_line() +
scale_x_continuous(limits = c(1995, 2024)) +
scale_y_continuous(breaks = c(10000000, 20000000, 30000000),
limits = c(0, 40000000),
labels = c("10", "20", "30")) +
ylab("Dollars (millions)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ggtitle("AK Tanner Crab Fishery Value (1995-Present)")

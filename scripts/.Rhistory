filter(bitter_mean > 0.01)
View(test)
pct_table <- pct_table %>%
filter(bitter_mean > 0.01) %>%
filter(pct != 5)
View(pct_table)
#### Egg Percent -----------------------------------------------------------------
# Calculate means and standard errors
pct_means <- tapply(femdat$Bitter, femdat$Egg.Percent, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Percent, FUN = sd) / sqrt(table(femdat$Egg.Percent)))
# Create new data table
pct_table <- data.frame(pct_means, SE_vals)
# Rename and reorder columns
pct_table <- pct_table %>%
dplyr::rename(bitter_mean = pct_means,
pct = Var1,
std_error = Freq) %>%
relocate(pct)
# Remove values without representation
pct_table$pct <- as.numeric(levels(pct_table$pct))
pct_table <- pct_table %>%
filter(bitter_mean > 0.01) %>%
filter(pct != 5)
# Multiply values by 100 to get percentages
pct_table$bitter_mean = pct_table$bitter_mean * 100
pct_table$std_error = pct_table$std_error * 100
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Percent")
pct_plot
dev_plot
pct_plot
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 1) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Percent")
pct_plot
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 1.5) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Percent")
pct_plot
dev_plot
# Plot dev
dev_plot <- ggplot(dev_table) +
geom_bar(aes(x = dev, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = dev,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Development") +
scale_x_discrete(labels = c("Barren Clean", "Barren Matted", "Dead Eggs", "Juvenile", "Uneyed"))
dev_plot
pct_plot
mascdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/male_data_for_model.csv")
View(mascdat)
#### Maturity (Males) -----------------------------------------------------------------
# Calculate means and standard errors
mat_means <- tapply(mascdat$Bitter, mascdat$mat_stat, FUN = mean)
SE_vals <- with(mascdat, tapply(Bitter, mat_stat, FUN = sd) / sqrt(table(mascdat$mat_stat)))
# Create new data table
mat_table <- data.frame(mat_means, SE_vals)
# Rename and reorder columns
mat_table <- mat_table %>%
dplyr::rename(bitter_mean = mat_means,
mat = Var1,
std_error = Freq) %>%
relocate(mat)
# Multiply values by 100 to get percentages
mat_table$bitter_mean = mat_table$bitter_mean * 100
mat_table$std_error = mat_table$std_error * 100
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Maturity (Males)")
mat_plot
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Maturity (Males)") +
scale_x_discrete(labels = c("Immature", "Mature"))
mat_plot
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Male Maturity") +
scale_x_discrete(labels = c("Immature", "Mature"))
mat_plot
ggdraw() +
draw_plot(dev_plot, x = 0, y = .5, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = .5, width = .5, height = .5) +
draw_plot(mat_plot, x = 0, y = 0, width = .5, height = .5)
# Plot dev
dev_plot <- ggplot(dev_table) +
geom_bar(aes(x = dev, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = dev,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Development") +
scale_x_discrete(labels = c("Barren Clean", "Barren Matted", "Dead Eggs", "Juvenile", "Uneyed")) +
scale_y_continuous(limits = c(0,40))
# Read in data
femdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/female_data_for_model.csv")
mascdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/male_data_for_model.csv")
#### Egg Development -----------------------------------------------------------------
# Calculate means and standard errors
dev_means <- tapply(femdat$Bitter, femdat$Egg.Development, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Development, FUN = sd) / sqrt(table(femdat$Egg.Development)))
# Create new data table
dev_table <- data.frame(dev_means, SE_vals)
# Rename and reorder columns
dev_table <- dev_table %>%
dplyr::rename(bitter_mean = dev_means,
dev = Var1,
std_error = Freq) %>%
relocate(dev)
# Multiply values by 100 to get percentages
dev_table$bitter_mean = dev_table$bitter_mean * 100
dev_table$std_error = dev_table$std_error * 100
# Plot dev
dev_plot <- ggplot(dev_table) +
geom_bar(aes(x = dev, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = dev,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Development") +
scale_x_discrete(labels = c("Barren Clean", "Barren Matted", "Dead Eggs", "Juvenile", "Uneyed")) +
scale_y_continuous(limits = c(0,40))
dev_plot
#### Egg Percent -----------------------------------------------------------------
# Calculate means and standard errors
pct_means <- tapply(femdat$Bitter, femdat$Egg.Percent, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Percent, FUN = sd) / sqrt(table(femdat$Egg.Percent)))
# Create new data table
pct_table <- data.frame(pct_means, SE_vals)
# Rename and reorder columns
pct_table <- pct_table %>%
dplyr::rename(bitter_mean = pct_means,
pct = Var1,
std_error = Freq) %>%
relocate(pct)
# Remove values without representation
pct_table$pct <- as.numeric(levels(pct_table$pct))
pct_table <- pct_table %>%
filter(bitter_mean > 0.01) %>%
filter(pct != 5)
# Multiply values by 100 to get percentages
pct_table$bitter_mean = pct_table$bitter_mean * 100
pct_table$std_error = pct_table$std_error * 100
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 1.5) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Percent") +
scale_y_continuous(limits = c(0,40)) +
theme(axis.title.y = element_blank())
pct_plot
#### Maturity (Males) -----------------------------------------------------------------
# Calculate means and standard errors
mat_means <- tapply(mascdat$Bitter, mascdat$mat_stat, FUN = mean)
SE_vals <- with(mascdat, tapply(Bitter, mat_stat, FUN = sd) / sqrt(table(mascdat$mat_stat)))
# Create new data table
mat_table <- data.frame(mat_means, SE_vals)
# Rename and reorder columns
mat_table <- mat_table %>%
dplyr::rename(bitter_mean = mat_means,
mat = Var1,
std_error = Freq) %>%
relocate(mat)
# Multiply values by 100 to get percentages
mat_table$bitter_mean = mat_table$bitter_mean * 100
mat_table$std_error = mat_table$std_error * 100
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Male Maturity") +
scale_x_discrete(labels = c("Immature", "Mature"))
mat_plot
ggdraw() +
draw_plot(dev_plot, x = 0, y = .5, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = .5, width = .5, height = .5) +
draw_plot(mat_plot, x = 0, y = 0, width = .5, height = .5)
ggdraw() +
draw_plot(dev_plot, x = 0, y = .5, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = .5, width = .5, height = .5) +
draw_plot(mat_plot, x = 0, y = 0, width = .5, height = .5)
ggsave(filename = "../paper/images/FigTK_sex_models_data.png")
# Read in data
femdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/female_data_for_model.csv")
mascdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/male_data_for_model.csv")
#### Egg Development -----------------------------------------------------------------
# Calculate means and standard errors
dev_means <- tapply(femdat$Bitter, femdat$Egg.Development, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Development, FUN = sd) / sqrt(table(femdat$Egg.Development)))
# Create new data table
dev_table <- data.frame(dev_means, SE_vals)
# Rename and reorder columns
dev_table <- dev_table %>%
dplyr::rename(bitter_mean = dev_means,
dev = Var1,
std_error = Freq) %>%
relocate(dev)
# Multiply values by 100 to get percentages
dev_table$bitter_mean = dev_table$bitter_mean * 100
dev_table$std_error = dev_table$std_error * 100
# Plot dev
dev_plot <- ggplot(dev_table) +
geom_bar(aes(x = dev, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = dev,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Development") +
scale_x_discrete(labels = c("Clean", "Matted", "Dead Eggs", "Juv.", "Uneyed")) +
scale_y_continuous(limits = c(0,40))
dev_plot
#### Egg Percent -----------------------------------------------------------------
# Calculate means and standard errors
pct_means <- tapply(femdat$Bitter, femdat$Egg.Percent, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Percent, FUN = sd) / sqrt(table(femdat$Egg.Percent)))
# Create new data table
pct_table <- data.frame(pct_means, SE_vals)
# Rename and reorder columns
pct_table <- pct_table %>%
dplyr::rename(bitter_mean = pct_means,
pct = Var1,
std_error = Freq) %>%
relocate(pct)
# Remove values without representation
pct_table$pct <- as.numeric(levels(pct_table$pct))
pct_table <- pct_table %>%
filter(bitter_mean > 0.01) %>%
filter(pct != 5)
# Multiply values by 100 to get percentages
pct_table$bitter_mean = pct_table$bitter_mean * 100
pct_table$std_error = pct_table$std_error * 100
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 1.5) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Percent") +
scale_y_continuous(limits = c(0,40)) +
theme(axis.title.y = element_blank())
pct_plot
#### Maturity (Males) -----------------------------------------------------------------
# Calculate means and standard errors
mat_means <- tapply(mascdat$Bitter, mascdat$mat_stat, FUN = mean)
SE_vals <- with(mascdat, tapply(Bitter, mat_stat, FUN = sd) / sqrt(table(mascdat$mat_stat)))
# Create new data table
mat_table <- data.frame(mat_means, SE_vals)
# Rename and reorder columns
mat_table <- mat_table %>%
dplyr::rename(bitter_mean = mat_means,
mat = Var1,
std_error = Freq) %>%
relocate(mat)
# Multiply values by 100 to get percentages
mat_table$bitter_mean = mat_table$bitter_mean * 100
mat_table$std_error = mat_table$std_error * 100
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Male Maturity") +
scale_x_discrete(labels = c("Immature", "Mature"))
mat_plot
ggdraw() +
draw_plot(dev_plot, x = 0, y = .5, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = .5, width = .5, height = .5) +
draw_plot(mat_plot, x = 0, y = 0, width = .5, height = .5)
ggsave(filename = "../paper/images/FigTK_sex_models_data.png")
ggdraw() +
draw_plot(dev_plot, x = 0, y = .5, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = .5, width = .5, height = .5) +
draw_plot(mat_plot, x = 0.25, y = 0, width = .5, height = .5)
ggsave(filename = "../paper/images/FigTK_sex_models_data.png")
ggdraw() +
draw_plot(dev_plot, x = 0, y = 0, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = 0, width = .5, height = .5) +
draw_plot(mat_plot, x = 0.25, y = 0.5, width = .5, height = .5)
# Read in data
femdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/female_data_for_model.csv")
mascdat <- read.csv(file = "../output/ADFG_SE_AK_pot_surveys/cleaned_data/crab_data/male_data_for_model.csv")
#### Egg Development -----------------------------------------------------------------
# Calculate means and standard errors
dev_means <- tapply(femdat$Bitter, femdat$Egg.Development, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Development, FUN = sd) / sqrt(table(femdat$Egg.Development)))
# Create new data table
dev_table <- data.frame(dev_means, SE_vals)
# Rename and reorder columns
dev_table <- dev_table %>%
dplyr::rename(bitter_mean = dev_means,
dev = Var1,
std_error = Freq) %>%
relocate(dev)
# Multiply values by 100 to get percentages
dev_table$bitter_mean = dev_table$bitter_mean * 100
dev_table$std_error = dev_table$std_error * 100
# Plot dev
dev_plot <- ggplot(dev_table) +
geom_bar(aes(x = dev, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = dev,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Development") +
scale_x_discrete(labels = c("Clean", "Matted", "Dead Eggs", "Juvenile", "Uneyed")) +
scale_y_continuous(limits = c(0,40))
dev_plot
#### Egg Percent -----------------------------------------------------------------
# Calculate means and standard errors
pct_means <- tapply(femdat$Bitter, femdat$Egg.Percent, FUN = mean)
SE_vals <- with(femdat, tapply(Bitter, Egg.Percent, FUN = sd) / sqrt(table(femdat$Egg.Percent)))
# Create new data table
pct_table <- data.frame(pct_means, SE_vals)
# Rename and reorder columns
pct_table <- pct_table %>%
dplyr::rename(bitter_mean = pct_means,
pct = Var1,
std_error = Freq) %>%
relocate(pct)
# Remove values without representation
pct_table$pct <- as.numeric(levels(pct_table$pct))
pct_table <- pct_table %>%
filter(bitter_mean > 0.01) %>%
filter(pct != 5)
# Multiply values by 100 to get percentages
pct_table$bitter_mean = pct_table$bitter_mean * 100
pct_table$std_error = pct_table$std_error * 100
# Plot pct
pct_plot <- ggplot(pct_table) +
geom_bar(aes(x = pct, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = pct,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 1.5) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Egg Percent") +
scale_y_continuous(limits = c(0,40)) +
theme(axis.title.y = element_blank())
pct_plot
#### Maturity (Males) -----------------------------------------------------------------
# Calculate means and standard errors
mat_means <- tapply(mascdat$Bitter, mascdat$mat_stat, FUN = mean)
SE_vals <- with(mascdat, tapply(Bitter, mat_stat, FUN = sd) / sqrt(table(mascdat$mat_stat)))
# Create new data table
mat_table <- data.frame(mat_means, SE_vals)
# Rename and reorder columns
mat_table <- mat_table %>%
dplyr::rename(bitter_mean = mat_means,
mat = Var1,
std_error = Freq) %>%
relocate(mat)
# Multiply values by 100 to get percentages
mat_table$bitter_mean = mat_table$bitter_mean * 100
mat_table$std_error = mat_table$std_error * 100
# Plot mat
mat_plot <- ggplot(mat_table) +
geom_bar(aes(x = mat, y = bitter_mean),
stat = "identity",
fill = "grey")+
geom_errorbar(aes(x = mat,
ymin = bitter_mean - std_error,
ymax = bitter_mean + std_error),
width = 0.3) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
ylab("Percent of Crabs with BCS") +
xlab("Male Maturity") +
scale_x_discrete(labels = c("Immature", "Mature"))
mat_plot
ggdraw() +
draw_plot(dev_plot, x = 0, y = 0, width = .5, height = .5) +
draw_plot(pct_plot, x = 0.5, y = 0, width = .5, height = .5) +
draw_plot(mat_plot, x = 0.25, y = 0.5, width = .5, height = .5)
ggsave(filename = "../paper/images/FigTK_sex_models_data.png")
